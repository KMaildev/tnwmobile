{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/mobile/tnw/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/mobile/tnw/src/views/property/PropertyDetail.vue?vue&type=template&id=564b3cf6&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/mobile/tnw/src/views/property/PropertyDetail.vue","mtime":1645946763278},{"path":"/Applications/XAMPP/xamppfiles/htdocs/mobile/tnw/node_modules/cache-loader/dist/cjs.js","mtime":1645262070880},{"path":"/Applications/XAMPP/xamppfiles/htdocs/mobile/tnw/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1645262074191},{"path":"/Applications/XAMPP/xamppfiles/htdocs/mobile/tnw/node_modules/cache-loader/dist/cjs.js","mtime":1645262070880},{"path":"/Applications/XAMPP/xamppfiles/htdocs/mobile/tnw/node_modules/vue-loader/lib/index.js","mtime":1645262073184}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYKICB2LXRvdWNoPSJ7CiAgICBsZWZ0OiAoKSA9PiBzd2lwZSgnTGVmdCcpLAogICAgcmlnaHQ6ICgpID0+IHN3aXBlKCdSaWdodCcpLAogICAgdXA6ICgpID0+IHN3aXBlKCdVcCcpLAogICAgZG93bjogKCkgPT4gc3dpcGUoJ0Rvd24nKSwKICB9Igo+CiAgPExvYWRlciB2LXNob3c9ImlzTG9hZCIgLz4KICA8di1jYXJkIHYtc2hvdz0iIWlzTG9hZCIgZWxldmF0aW9uPSIyNCIgbWF4LXdpZHRoPSI0NDQiIGNsYXNzPSJteC1hdXRvIj4KICAgIDx2LWFsZXJ0IGRlbnNlIG91dGxpbmVkIHR5cGU9InN1Y2Nlc3MiIHYtaWY9InN1Y2Nlc3MiIHN0eWxlPSJtYXJnaW46IDJweCI+CiAgICAgIHt7IHN1Y2Nlc3MgfX0KICAgIDwvdi1hbGVydD4KCiAgICA8di1hbGVydCBkZW5zZSBvdXRsaW5lZCB0eXBlPSJlcnJvciIgdi1pZj0iZXJyb3IiIHN0eWxlPSJtYXJnaW46IDJweCI+CiAgICAgIHt7IGVycm9yIH19CiAgICA8L3YtYWxlcnQ+CgogICAgPHYtc3lzdGVtLWJhciBsaWdodHMtb3V0Pjwvdi1zeXN0ZW0tYmFyPgogICAgPHYtY2Fyb3VzZWwKICAgICAgOmNvbnRpbnVvdXM9InRydWUiCiAgICAgIDpzaG93LWFycm93cz0idHJ1ZSIKICAgICAgaGlkZS1kZWxpbWl0ZXJzCiAgICAgIGhlaWdodD0iMzAwIgogICAgPgogICAgICA8di1jYXJvdXNlbC1pdGVtCiAgICAgICAgdi1mb3I9Iihwcm9wZXJ0eVBob3RvLCBpbmRleCkgaW4gcHJvcGVydHlQaG90b3MiCiAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgID4KICAgICAgICA8cm91dGVyLWxpbmsKICAgICAgICAgIDp0bz0iewogICAgICAgICAgICBuYW1lOiAnUHJvcGVydHlJbWFnZScsCiAgICAgICAgICAgIHBhcmFtczogeyBpZDogJHJvdXRlLnBhcmFtcy5pZCB9LAogICAgICAgICAgfSIKICAgICAgICA+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIDpzcmM9InByb3BlcnR5UGhvdG8uaW1hZ2VfdXJsICsgcHJvcGVydHlQaG90by5waG90byIKICAgICAgICAgICAgYWx0PSJQcm9wZXJ0eSBJbWFnZSIKICAgICAgICAgICAgc3R5bGU9IgogICAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICAgIGhlaWdodDogYXV0bzsKICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjsKICAgICAgICAgICAgICBvYmplY3QtcG9zaXRpb246IGNlbnRlcjsKICAgICAgICAgICAgIgogICAgICAgICAgLz4KICAgICAgICA8L3JvdXRlci1saW5rPgogICAgICA8L3YtY2Fyb3VzZWwtaXRlbT4KICAgIDwvdi1jYXJvdXNlbD4KCiAgICA8di1hbGVydCBvdXRsaW5lZCBjb2xvcj0id2FybmluZyIgc3R5bGU9Im1hcmdpbjogMnB4Ij4KICAgICAgPGRpdj4KICAgICAgICA8c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMnB4Ij4KICAgICAgICAgIHt7IHByb3BlcnR5RGV0YWlsLnRpdGxlX21tIH19CiAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvdi1hbGVydD4KCiAgICA8ZGl2IHN0eWxlPSJwYWRkaW5nOiA1cHg7IGJhY2tncm91bmQtY29sb3I6ICNhZjc0MmUiIGNsYXNzPSJjYXJkLXBhbmVsIj4KICAgICAgPGNlbnRlcj4KICAgICAgICA8di1idG4KICAgICAgICAgIGNsYXNzPSJtYS0xIgogICAgICAgICAgcGxhaW4KICAgICAgICAgIEBjbGljaz0iQWRkRmF2b3JpdGVzKHByb3BlcnR5RGV0YWlsLnNhbGVfaWQpIgogICAgICAgID4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogd2hpdGUiPgogICAgICAgICAgICB7ewogICAgICAgICAgICAgIHNldExhbmd1YWdlID09IHRydWUKICAgICAgICAgICAgICAgID8gIkFkZCB5b3VyIGZhdm91cml0ZSBwcm9wZXJ0eSIKICAgICAgICAgICAgICAgIDogIuGAoeGAlOGAvuGAheGAuuGAnuGAgOGAuuGAhuGAr+GAtuGAuOGAheGArOGAm+GAhOGAuuGAuOGAkeGAsuGAkeGAiuGAuuGAt+GAleGAqyIKICAgICAgICAgICAgfX0KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3YtYnRuPgogICAgICA8L2NlbnRlcj4KICAgIDwvZGl2PgoKICAgIDxkaXYKICAgICAgc3R5bGU9InBhZGRpbmc6IDVweDsgYmFja2dyb3VuZC1jb2xvcjogI2YwOTYzZSIKICAgICAgY2xhc3M9ImNhcmQtcGFuZWwiCiAgICAgIHYtaWY9InByb3BlcnR5RGV0YWlsLmluc3RhbGxtZW50ID09PSAnWWVzJyIKICAgID4KICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiB3aGl0ZSI+CiAgICAgICAgPHYtaWNvbiBsZWZ0IGNsYXNzPSJtYXRlcmlhbC1pY29ucyIgc3R5bGU9ImNvbG9yOiB3aGl0ZSI+CiAgICAgICAgICBhdHRhY2hfbW9uZXkKICAgICAgICA8L3YtaWNvbj4KICAgICAgICDhgJjhgI/hgLrhgKHhgJvhgIXhgLrhgIDhgLvhgJbhgLzhgIThgLrhgLcg4YCb4YCU4YCt4YCv4YCE4YC64YCV4YCr4YCe4YCK4YC6CiAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgoKICAgIDx2LWxpc3QgY2xhc3M9InRyYW5zcGFyZW50Ij4KICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4Ij4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIkFEIE51bWJlciIgOiAi4YCA4YC84YCx4YCs4YC64YCE4YC84YCs4YCU4YC24YCV4YCr4YCQ4YC6IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgPHYtbGlzdC1pdGVtLXN1YnRpdGxlCiAgICAgICAgICBjbGFzcz0idGV4dC1yaWdodCIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDEzcHg7IGNvbG9yOiAjMGY0YzhjOyBmb250LXdlaWdodDogYm9sZCIKICAgICAgICA+CiAgICAgICAgICB7eyBwcm9wZXJ0eURldGFpbC5hZF9udW1iZXIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXN1YnRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4Ij4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIlByaWNlIiA6ICLhgIXhgLvhgLHhgLjhgJThgL7hgK/hgJThgLrhgLgiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgICA8di1saXN0LWl0ZW0tc3VidGl0bGUKICAgICAgICAgIGNsYXNzPSJ0ZXh0LXJpZ2h0IgogICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTNweDsgY29sb3I6ICMwZjRjOGM7IGZvbnQtd2VpZ2h0OiBib2xkIgogICAgICAgID4KICAgICAgICAgIHt7IHByb3BlcnR5RGV0YWlsLnByaWNlIH19CiAgICAgICAgICB7ewogICAgICAgICAgICBwcm9wZXJ0eURldGFpbC5wcmljZV90eXBlID09ICJNTUsoTGFraHMpIiA/ICLhgJ7hgK3hgJThgLrhgLgo4YCA4YC74YCV4YC6KSIgOiAiVVNEIgogICAgICAgICAgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXN1YnRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4Ij4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIkFyZWEiIDogIuGAoeGAgOGAu+GAmuGAuuGAoeGAneGAlOGAuuGAuCIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgIDx2LWxpc3QtaXRlbS1zdWJ0aXRsZQogICAgICAgICAgY2xhc3M9InRleHQtcmlnaHQiCiAgICAgICAgICBzdHlsZT0iZm9udC1zaXplOiAxM3B4OyBjb2xvcjogIzBmNGM4YzsgZm9udC13ZWlnaHQ6IGJvbGQiCiAgICAgICAgPgogICAgICAgICAge3sgcHJvcGVydHlEZXRhaWwuYXJlYSB9fQogICAgICAgICAge3sgcHJvcGVydHlEZXRhaWwuYXJlYV90eXBlIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS1zdWJ0aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCI+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJUeXBlIiA6ICLhgKHhgJnhgLvhgK3hgK/hgLjhgKHhgIXhgKzhgLgiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgICA8di1saXN0LWl0ZW0tc3VidGl0bGUKICAgICAgICAgIGNsYXNzPSJ0ZXh0LXJpZ2h0IgogICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTNweDsgY29sb3I6ICMwZjRjOGM7IGZvbnQtd2VpZ2h0OiBib2xkIgogICAgICAgID4KICAgICAgICAgIHt7IHByb3BlcnR5RGV0YWlsLnByb3BlcnR5X3R5cGVfbW0gfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXN1YnRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4Ij4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIlJlZ2lvbiIgOiAi4YCQ4YCt4YCv4YCE4YC64YC44YGKIOGAleGAvOGAiuGAuuGAlOGAmuGAuiIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgIDx2LWxpc3QtaXRlbS1zdWJ0aXRsZQogICAgICAgICAgY2xhc3M9InRleHQtcmlnaHQiCiAgICAgICAgICBzdHlsZT0iZm9udC1zaXplOiAxM3B4OyBjb2xvcjogIzBmNGM4YzsgZm9udC13ZWlnaHQ6IGJvbGQiCiAgICAgICAgPgogICAgICAgICAge3sgcHJvcGVydHlEZXRhaWwucmVnaW9uX21tIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS1zdWJ0aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCI+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJUb3duc2hpcCIgOiAi4YCZ4YC84YCt4YCv4YC34YCU4YCa4YC6IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgPHYtbGlzdC1pdGVtLXN1YnRpdGxlCiAgICAgICAgICBjbGFzcz0idGV4dC1yaWdodCIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDEzcHg7IGNvbG9yOiAjMGY0YzhjOyBmb250LXdlaWdodDogYm9sZCIKICAgICAgICA+CiAgICAgICAgICB7eyBwcm9wZXJ0eURldGFpbC50b3duc2hpcHNfbW0gfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXN1YnRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4Ij4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIlN0YXR1cyIgOiAi4YCV4YC84YCE4YC64YCG4YCE4YC64YCV4YC84YCu4YC44YCZ4YCV4YC84YCuIiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgPHYtbGlzdC1pdGVtLXN1YnRpdGxlCiAgICAgICAgICBjbGFzcz0idGV4dC1yaWdodCIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDEzcHg7IGNvbG9yOiAjMGY0YzhjOyBmb250LXdlaWdodDogYm9sZCIKICAgICAgICA+CiAgICAgICAgICB7eyBwcm9wZXJ0eURldGFpbC5wcm9wZXJ0eV9zdGF0dXMgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXN1YnRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4IiB2LWlmPSJwcm9wZXJ0eURldGFpbC5zaHJpbmVfcm9vbSI+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJTaHJpbmUgcm9vbSIgOiAi4YCY4YCv4YCb4YCs4YC44YCB4YCU4YC64YC4IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgPHYtbGlzdC1pdGVtLXN1YnRpdGxlCiAgICAgICAgICBjbGFzcz0idGV4dC1yaWdodCIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDEzcHg7IGNvbG9yOiAjMGY0YzhjOyBmb250LXdlaWdodDogYm9sZCIKICAgICAgICA+CiAgICAgICAgICB7eyBwcm9wZXJ0eURldGFpbC5zaHJpbmVfcm9vbSB9fSDhgIHhgJThgLrhgLgKICAgICAgICA8L3YtbGlzdC1pdGVtLXN1YnRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4Ij4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIkJlZHJvb20iIDogIuGAoeGAreGAleGAuuGAgeGAlOGAuuGAuCIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgIDx2LWxpc3QtaXRlbS1zdWJ0aXRsZQogICAgICAgICAgY2xhc3M9InRleHQtcmlnaHQiCiAgICAgICAgICBzdHlsZT0iZm9udC1zaXplOiAxM3B4OyBjb2xvcjogIzBmNGM4YzsgZm9udC13ZWlnaHQ6IGJvbGQiCiAgICAgICAgPgogICAgICAgICAge3sgcHJvcGVydHlEZXRhaWwucm9vbXMgPT0gIiIgPyAiMCIgOiBwcm9wZXJ0eURldGFpbC5yb29tcyB9fQogICAgICAgICAg4YCB4YCU4YC64YC4CiAgICAgICAgPC92LWxpc3QtaXRlbS1zdWJ0aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCI+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJNYXN0ZXIgQmVkcm9vbSIgOiAiTWFzdGVyIEJlZHJvb20iIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgICA8di1saXN0LWl0ZW0tc3VidGl0bGUKICAgICAgICAgIGNsYXNzPSJ0ZXh0LXJpZ2h0IgogICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTNweDsgY29sb3I6ICMwZjRjOGM7IGZvbnQtd2VpZ2h0OiBib2xkIgogICAgICAgID4KICAgICAgICAgIHt7CiAgICAgICAgICAgIHByb3BlcnR5RGV0YWlsLm1hc3RlcmJhdGhyb29tID09ICIiCiAgICAgICAgICAgICAgPyAiMCIKICAgICAgICAgICAgICA6IHByb3BlcnR5RGV0YWlsLm1hc3RlcmJhdGhyb29tCiAgICAgICAgICB9fQogICAgICAgICAg4YCB4YCU4YC64YC4CiAgICAgICAgPC92LWxpc3QtaXRlbS1zdWJ0aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCIgdi1pZj0icHJvcGVydHlEZXRhaWwuZGluaW5nX3Jvb20iPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4KICAgICAgICAgIHt7IHNldExhbmd1YWdlID09IHRydWUgPyAiRGluaW5nIFJvb20iIDogIuGAkeGAmeGAhOGAuuGAuOGAheGArOGAuOGAgeGAlOGAuuGAuCIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgIDx2LWxpc3QtaXRlbS1zdWJ0aXRsZQogICAgICAgICAgY2xhc3M9InRleHQtcmlnaHQiCiAgICAgICAgICBzdHlsZT0iZm9udC1zaXplOiAxM3B4OyBjb2xvcjogIzBmNGM4YzsgZm9udC13ZWlnaHQ6IGJvbGQiCiAgICAgICAgPgogICAgICAgICAge3sgcHJvcGVydHlEZXRhaWwuZGluaW5nX3Jvb20gfX0g4YCB4YCU4YC64YC4CiAgICAgICAgPC92LWxpc3QtaXRlbS1zdWJ0aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCI+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJMaXZpbmcgUm9vbSIgOiAi4YCn4YCK4YC64YC34YCB4YCU4YC64YC4IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgPHYtbGlzdC1pdGVtLXN1YnRpdGxlCiAgICAgICAgICBjbGFzcz0idGV4dC1yaWdodCIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDEzcHg7IGNvbG9yOiAjMGY0YzhjOyBmb250LXdlaWdodDogYm9sZCIKICAgICAgICA+CiAgICAgICAgICB7eyBwcm9wZXJ0eURldGFpbC5saXZpbmdfcm9vbSB9fSDhgIHhgJThgLrhgLgKICAgICAgICA8L3YtbGlzdC1pdGVtLXN1YnRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4Ij4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIkJhdGhyb29tIiA6ICLhgJvhgLHhgIHhgLvhgK3hgK/hgLjhgIHhgJThgLrhgLgiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgICA8di1saXN0LWl0ZW0tc3VidGl0bGUKICAgICAgICAgIGNsYXNzPSJ0ZXh0LXJpZ2h0IgogICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTNweDsgY29sb3I6ICMwZjRjOGM7IGZvbnQtd2VpZ2h0OiBib2xkIgogICAgICAgID4KICAgICAgICAgIHt7IHByb3BlcnR5RGV0YWlsLmJhdGhyb29tID09ICIiID8gIjAiIDogcHJvcGVydHlEZXRhaWwuYmF0aHJvb20gfX0KICAgICAgICAgIOGAgeGAlOGAuuGAuAogICAgICAgIDwvdi1saXN0LWl0ZW0tc3VidGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLm90aGVyX3Jvb20iPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4KICAgICAgICAgIHt7IHNldExhbmd1YWdlID09IHRydWUgPyAiT3RoZXIgUm9vbSIgOiAi4YCh4YCB4YC84YCs4YC44YCh4YCB4YCU4YC64YC4IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgPHYtbGlzdC1pdGVtLXN1YnRpdGxlCiAgICAgICAgICBjbGFzcz0idGV4dC1yaWdodCIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDEzcHg7IGNvbG9yOiAjMGY0YzhjOyBmb250LXdlaWdodDogYm9sZCIKICAgICAgICA+CiAgICAgICAgICB7eyBwcm9wZXJ0eURldGFpbC5vdGhlcl9yb29tIH19IOGAgeGAlOGAuuGAuAogICAgICAgIDwvdi1saXN0LWl0ZW0tc3VidGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLmZsb29yIj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIkZsb29yIiA6ICLhgKHhgJzhgL3hgL7hgKwiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgICA8di1saXN0LWl0ZW0tc3VidGl0bGUKICAgICAgICAgIGNsYXNzPSJ0ZXh0LXJpZ2h0IgogICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTNweDsgY29sb3I6ICMwZjRjOGM7IGZvbnQtd2VpZ2h0OiBib2xkIgogICAgICAgID4KICAgICAgICAgIHt7IHByb3BlcnR5RGV0YWlsLmZsb29yIH19IOGAnOGAveGAvuGArAogICAgICAgIDwvdi1saXN0LWl0ZW0tc3VidGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLnllYXJfYnVpbHQiPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4KICAgICAgICAgIHt7IHNldExhbmd1YWdlID09IHRydWUgPyAiQnVpbGRpbmcgWWVhciIgOiAi4YCQ4YCK4YC64YCG4YCx4YCs4YCA4YC64YCe4YCK4YC64YC34YCB4YCv4YCU4YC+4YCF4YC6IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgPHYtbGlzdC1pdGVtLXN1YnRpdGxlCiAgICAgICAgICBjbGFzcz0idGV4dC1yaWdodCIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDEzcHg7IGNvbG9yOiAjMGY0YzhjOyBmb250LXdlaWdodDogYm9sZCIKICAgICAgICA+CiAgICAgICAgICB7eyBwcm9wZXJ0eURldGFpbC55ZWFyX2J1aWx0IH19CiAgICAgICAgPC92LWxpc3QtaXRlbS1zdWJ0aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWRpdmlkZXIgY2xhc3M9Im15LTIgaW5mbyIgc3R5bGU9Im9wYWNpdHk6IDAuMjIiPjwvdi1kaXZpZGVyPgoKICAgICAgPHYtbGlzdC1pdGVtCiAgICAgICAgc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiCiAgICAgICAgdi1pZj0icHJvcGVydHlEZXRhaWwuc3dpbW1pbmdfcG9vbCIKICAgICAgPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIlN3aW1taW5nIFBvb2wiIDogIuGAm+GAseGAgOGAsOGAuOGAgOGAlOGAuiIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4IiB2LWlmPSJwcm9wZXJ0eURldGFpbC5zZWN1cml0Ij4KICAgICAgICA8di1pY29uIGxlZnQgY2xhc3M9Im1hdGVyaWFsLWljb25zIiBzdHlsZT0iY29sb3I6IGJsYWNrIj4KICAgICAgICAgIGNoZWNrX2NpcmNsZV9vdXRsaW5lCiAgICAgICAgPC92LWljb24+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICIyNCBocnMgU2VjdXJpdHkiIDogIiDhgYLhgYQg4YCU4YCs4YCb4YCu4YCc4YCv4YC24YCB4YC84YCv4YC24YCb4YCx4YC4IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0KICAgICAgICBzdHlsZT0ibWluLWhlaWdodDogMzBweCIKICAgICAgICB2LWlmPSJwcm9wZXJ0eURldGFpbC5haXJfY29uZGl0aW9uaW5nIgogICAgICA+CiAgICAgICAgPHYtaWNvbiBsZWZ0IGNsYXNzPSJtYXRlcmlhbC1pY29ucyIgc3R5bGU9ImNvbG9yOiBibGFjayI+CiAgICAgICAgICBjaGVja19jaXJjbGVfb3V0bGluZQogICAgICAgIDwvdi1pY29uPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4KICAgICAgICAgIHt7IHNldExhbmd1YWdlID09IHRydWUgPyAiQWlyIGNvbmRpdGlvbmluZyIgOiAi4YCc4YCx4YCh4YCx4YC44YCV4YCx4YC44YCF4YCU4YCF4YC6IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLndpZmkiPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+IFdpZmkgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCIgdi1pZj0icHJvcGVydHlEZXRhaWwuYmFsY29ueSI+CiAgICAgICAgPHYtaWNvbiBsZWZ0IGNsYXNzPSJtYXRlcmlhbC1pY29ucyIgc3R5bGU9ImNvbG9yOiBibGFjayI+CiAgICAgICAgICBjaGVja19jaXJjbGVfb3V0bGluZQogICAgICAgIDwvdi1pY29uPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4KICAgICAgICAgIHt7IHNldExhbmd1YWdlID09IHRydWUgPyAiQmFsY29ueSIgOiAi4YCc4YCe4YCs4YCG4YCx4YCs4YCE4YC6IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLmRpc2h3YXNoZXIiPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIkRpc2h3YXNoZXIiIDogIuGAleGAlOGAuuGAuOGAgOGAlOGAuuGAhuGAseGAuOGAheGAgOGAuiIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4IiB2LWlmPSJwcm9wZXJ0eURldGFpbC5nZW5lcmF0b3IiPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIkdlbmVyYXRvciIgOiAi4YCZ4YCu4YC44YCF4YCA4YC6IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLm5lYXJfY2h1cmNoIj4KICAgICAgICA8di1pY29uIGxlZnQgY2xhc3M9Im1hdGVyaWFsLWljb25zIiBzdHlsZT0iY29sb3I6IGJsYWNrIj4KICAgICAgICAgIGNoZWNrX2NpcmNsZV9vdXRsaW5lCiAgICAgICAgPC92LWljb24+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJOZWFyIENodXJjaCIgOiAi4YCY4YCv4YCb4YCs4YC44YCA4YC74YCx4YCs4YCE4YC64YC44YCh4YCU4YCu4YC4IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLmdhcmRlbiI+CiAgICAgICAgPHYtaWNvbiBsZWZ0IGNsYXNzPSJtYXRlcmlhbC1pY29ucyIgc3R5bGU9ImNvbG9yOiBibGFjayI+CiAgICAgICAgICBjaGVja19jaXJjbGVfb3V0bGluZQogICAgICAgIDwvdi1pY29uPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4KICAgICAgICAgIHt7IHNldExhbmd1YWdlID09IHRydWUgPyAiR2FyZGVuIiA6ICLhgKXhgJrhgLvhgKzhgInhgLrhgJDhgLHhgKzhgLoiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCIgdi1pZj0icHJvcGVydHlEZXRhaWwuZ3ltIj4KICAgICAgICA8di1pY29uIGxlZnQgY2xhc3M9Im1hdGVyaWFsLWljb25zIiBzdHlsZT0iY29sb3I6IGJsYWNrIj4KICAgICAgICAgIGNoZWNrX2NpcmNsZV9vdXRsaW5lCiAgICAgICAgPC92LWljb24+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJHWU0iIDogIuGAoeGArOGAuOGAgOGAheGArOGAuOGAm+GAr+GAtiIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4IiB2LWlmPSJwcm9wZXJ0eURldGFpbC5saWZ0Ij4KICAgICAgICA8di1pY29uIGxlZnQgY2xhc3M9Im1hdGVyaWFsLWljb25zIiBzdHlsZT0iY29sb3I6IGJsYWNrIj4KICAgICAgICAgIGNoZWNrX2NpcmNsZV9vdXRsaW5lCiAgICAgICAgPC92LWljb24+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJMaWZ0IiA6ICLhgJPhgKvhgJDhgLrhgJzhgL7hgLHhgIHhgKvhgLgiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCIgdi1pZj0icHJvcGVydHlEZXRhaWwucGxheV9ncm91bmQiPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIlBsYXkgR3JvdW5kIiA6ICLhgIDhgIXhgKzhgLjhgIDhgL3hgIThgLrhgLgiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCIgdi1pZj0icHJvcGVydHlEZXRhaWwuY2N0diI+CiAgICAgICAgPHYtaWNvbiBsZWZ0IGNsYXNzPSJtYXRlcmlhbC1pY29ucyIgc3R5bGU9ImNvbG9yOiBibGFjayI+CiAgICAgICAgICBjaGVja19jaXJjbGVfb3V0bGluZQogICAgICAgIDwvdi1pY29uPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4gQ0NUViA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4IiB2LWlmPSJwcm9wZXJ0eURldGFpbC5jYXJfcGFya2luZyI+CiAgICAgICAgPHYtaWNvbiBsZWZ0IGNsYXNzPSJtYXRlcmlhbC1pY29ucyIgc3R5bGU9ImNvbG9yOiBibGFjayI+CiAgICAgICAgICBjaGVja19jaXJjbGVfb3V0bGluZQogICAgICAgIDwvdi1pY29uPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4KICAgICAgICAgIENhciBQYXJraW5nCiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbQogICAgICAgIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4IgogICAgICAgIHYtaWY9InByb3BlcnR5RGV0YWlsLm1vdW50YWluX3ZpZXciCiAgICAgID4KICAgICAgICA8di1pY29uIGxlZnQgY2xhc3M9Im1hdGVyaWFsLWljb25zIiBzdHlsZT0iY29sb3I6IGJsYWNrIj4KICAgICAgICAgIGNoZWNrX2NpcmNsZV9vdXRsaW5lCiAgICAgICAgPC92LWljb24+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJNb3VudGFpbiBWaWV3IiA6ICLhgJDhgLHhgKzhgIThgLrhgJDhgJThgLrhgLjhgJvhgL7hgK/hgIHhgIThgLrhgLgiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCIgdi1pZj0icHJvcGVydHlEZXRhaWwucGFnb2RhX3ZpZXciPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIlBhZ29kYSBWaWV3IiA6ICLhgJjhgK/hgJvhgKzhgLjhgIXhgLHhgJDhgK7hgJnhgLvhgKzhgLgiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCIgdi1pZj0icHJvcGVydHlEZXRhaWwuc2VhX3ZpZXciPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIlNlYSBWaWV3IiA6ICLhgJXhgIThgLrhgJzhgJrhgLrhgJnhgLzhgIThgLrhgIDhgL3hgIThgLrhgLgiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgIDx2LWxpc3QtaXRlbSBzdHlsZT0ibWluLWhlaWdodDogMzBweCIgdi1pZj0icHJvcGVydHlEZXRhaWwubGFrZV92aWV3Ij4KICAgICAgICA8di1pY29uIGxlZnQgY2xhc3M9Im1hdGVyaWFsLWljb25zIiBzdHlsZT0iY29sb3I6IGJsYWNrIj4KICAgICAgICAgIGNoZWNrX2NpcmNsZV9vdXRsaW5lCiAgICAgICAgPC92LWljb24+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJMYWtlIFZpZXciIDogIuGAoeGAreGAr+GAhOGAuuGAmeGAvOGAhOGAuuGAgOGAveGAhOGAuuGAuCIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4IiB2LWlmPSJwcm9wZXJ0eURldGFpbC5jaXR5X3ZpZXciPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIkNpdHkgVmlldyIgOiAi4YCZ4YC84YCt4YCv4YC34YCZ4YC84YCE4YC64YCA4YC94YCE4YC64YC4IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLnNob3dyb29tIj4KICAgICAgICA8di1pY29uIGxlZnQgY2xhc3M9Im1hdGVyaWFsLWljb25zIiBzdHlsZT0iY29sb3I6IGJsYWNrIj4KICAgICAgICAgIGNoZWNrX2NpcmNsZV9vdXRsaW5lCiAgICAgICAgPC92LWljb24+CiAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgICAge3sgc2V0TGFuZ3VhZ2UgPT0gdHJ1ZSA/ICJTaG93cm9vbSIgOiAi4YCh4YCb4YCx4YCs4YCE4YC64YC44YCV4YC84YCB4YCU4YC64YC4IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLnJlc3RhdXJhbnQiPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIlJlc3RhdXJhbnQiIDogIuGAheGArOGAuOGAnuGAseGArOGAgOGAuuGAhuGAreGAr+GAhOGAuiIgfX0KICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgPHYtbGlzdC1pdGVtIHN0eWxlPSJtaW4taGVpZ2h0OiAzMHB4IiB2LWlmPSJwcm9wZXJ0eURldGFpbC5vZmZpY2UiPgogICAgICAgIDx2LWljb24gbGVmdCBjbGFzcz0ibWF0ZXJpYWwtaWNvbnMiIHN0eWxlPSJjb2xvcjogYmxhY2siPgogICAgICAgICAgY2hlY2tfY2lyY2xlX291dGxpbmUKICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgc3R5bGU9ImZvbnQtc2l6ZTogMTNweCI+CiAgICAgICAgICB7eyBzZXRMYW5ndWFnZSA9PSB0cnVlID8gIk9mZmljZSIgOiAi4YCb4YCv4YC24YC44YCB4YCU4YC64YC4IiB9fQogICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1saXN0LWl0ZW0gc3R5bGU9Im1pbi1oZWlnaHQ6IDMwcHgiIHYtaWY9InByb3BlcnR5RGV0YWlsLndhcmVob3VzZSI+CiAgICAgICAgPHYtaWNvbiBsZWZ0IGNsYXNzPSJtYXRlcmlhbC1pY29ucyIgc3R5bGU9ImNvbG9yOiBibGFjayI+CiAgICAgICAgICBjaGVja19jaXJjbGVfb3V0bGluZQogICAgICAgIDwvdi1pY29uPgogICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBzdHlsZT0iZm9udC1zaXplOiAxM3B4Ij4KICAgICAgICAgIHt7IHNldExhbmd1YWdlID09IHRydWUgPyAiV2FyZWhvdXNlIiA6ICLhgILhgK3hgK/hgJLhgLHhgKvhgIThgLoiIH19CiAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgPC92LWxpc3QtaXRlbT4KICAgIDwvdi1saXN0PgoKICAgIDxkaXYKICAgICAgc3R5bGU9InBhZGRpbmc6IDVweDsgYmFja2dyb3VuZC1jb2xvcjogI2FmNzQyZTsgdGV4dC1hbGlnbjogY2VudGVyIgogICAgICBjbGFzcz0iY2FyZC1wYW5lbCIKICAgID4KICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiB3aGl0ZTsgZm9udC1zaXplOiAxMnB4IiB2LWlmPSJzZXRMYW5ndWFnZSA9PSB0cnVlIj4KICAgICAgICBQb3N0ZWQgT24KICAgICAgICB7eyBwcm9wZXJ0eURldGFpbC5wb3N0X3VwbG9hZF9kYXRlIH19CiAgICAgIDwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImNvbG9yOiB3aGl0ZTsgZm9udC1zaXplOiAxMnB4IiB2LWlmPSJzZXRMYW5ndWFnZSA9PSBmYWxzZSI+CiAgICAgICAge3sgcHJvcGVydHlEZXRhaWwucG9zdF91cGxvYWRfZGF0ZSB9fQogICAgICAgIOGAkOGAveGAhOGAuuGAgOGAvOGAseGArOGAuuGAhOGAvOGArOGAkOGAhOGAuuGAgeGAsuGAt+GAnuGAiuGAugogICAgICA8L3NwYW4+CiAgICAgIDxociAvPgogICAgICA8c3BhbiBzdHlsZT0iY29sb3I6IHdoaXRlOyBmb250LXNpemU6IDEycHgiIHYtaWY9InNldExhbmd1YWdlID09IHRydWUiPgogICAgICAgIFZpZXdzCiAgICAgICAge3sgcHJvcGVydHlEZXRhaWwudmlld2VyX2NvdW50IH19CiAgICAgIDwvc3Bhbj4KCiAgICAgIDxzcGFuIHN0eWxlPSJjb2xvcjogd2hpdGU7IGZvbnQtc2l6ZTogMTJweCIgdi1pZj0ic2V0TGFuZ3VhZ2UgPT0gZmFsc2UiPgogICAgICAgIOGApOGAoeGAreGAmeGAuuGAgeGAvOGAtuGAmeGAvOGAseGAgOGAreGArwogICAgICAgIHt7IHByb3BlcnR5RGV0YWlsLnZpZXdlcl9jb3VudCB9fQogICAgICAgIOGAgOGAvOGAreGAmeGAuiDhgIDhgLzhgIrhgLfhgLrhgJvhgL7hgK/hgLfhgJXhgLzhgK4KICAgICAgPC9zcGFuPgogICAgPC9kaXY+CgogICAgPHYtYWxlcnQgdGV4dCBjb2xvcj0id2hpdGUiPgogICAgICA8cCBzdHlsZT0iY29sb3I6ICNmMDk2M2UiPgogICAgICAgIHt7IHNldExhbmd1YWdlID09IHRydWUgPyAiRGVzY3JpcHRpb24iIDogIuGAoeGAgOGAvOGAseGArOGAhOGAuuGAuOGAoeGAm+GArCIgfX0KICAgICAgPC9wPgogICAgICA8di1kaXZpZGVyIGNsYXNzPSJteS0yIGluZm8iIHN0eWxlPSJvcGFjaXR5OiAwLjIyIj48L3YtZGl2aWRlcj4KICAgICAgPHYtcm93IGFsaWduPSJjZW50ZXIiIG5vLWd1dHRlcnM+CiAgICAgICAgPHYtY29sIGNsYXNzPSJncm93Ij4KICAgICAgICAgIDxwCiAgICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDEycHg7IGNvbG9yOiBibGFjayIKICAgICAgICAgICAgdi1odG1sPSJwcm9wZXJ0eURldGFpbC5kZXNjcmlwdGlvbl9tbSIKICAgICAgICAgID48L3A+CiAgICAgICAgICA8ZGl2PjwvZGl2PgogICAgICAgIDwvdi1jb2w+CiAgICAgIDwvdi1yb3c+CiAgICA8L3YtYWxlcnQ+CgogICAgPHYtY2FyZC10aXRsZQogICAgICBjbGFzcz0id2FyciBkYXJrZW4tMiIKICAgICAgc3R5bGU9ImxpbmUtaGVpZ2h0OiAxcmVtOyBiYWNrZ3JvdW5kLWNvbG9yOiAjYWY3NDJlIgogICAgPgogICAgICA8c3BhbiBjbGFzcz0id2hpdGUtLXRleHQiIHN0eWxlPSJmb250LXNpemU6IDEzcHgiPgogICAgICAgIHt7CiAgICAgICAgICBwcm9wZXJ0eURldGFpbC51c2VyX2luZm9faWQgPT0gMAogICAgICAgICAgICA/ICJUYXROYXlXb25Qcm9wZXJ0eS5jb20iCiAgICAgICAgICAgIDogcHJvcGVydHlEZXRhaWwuY29tcGFueV9uYW1lCiAgICAgICAgfX0KICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0id2hpdGUtLXRleHQiIHN0eWxlPSJmb250LXNpemU6IDEwcHgiPgogICAgICAgIOGAnuGAhOGAuuGAnuGAreGAnOGAreGAr+GAnuGAseGArCDhgKHhgIDhgLzhgLHhgKzhgIThgLrhgLjhgKHhgJvhgKzhgJnhgLvhgKzhgLjhgKHhgJDhgL3hgIDhgLog4YCG4YCA4YC64YCe4YC94YCa4YC64YCZ4YCx4YC44YCZ4YC84YCU4YC64YC44YCU4YCt4YCv4YCE4YC64YCV4YCr4YCe4YCK4YC6CiAgICAgIDwvc3Bhbj4KICAgIDwvdi1jYXJkLXRpdGxlPgoKICAgIDx2LWxpc3Q+CiAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICA8di1saXN0LWl0ZW0tYWN0aW9uPgogICAgICAgICAgPHYtaWNvbj5tZGktcGhvbmU8L3YtaWNvbj4KICAgICAgICA8L3YtbGlzdC1pdGVtLWFjdGlvbj4KCiAgICAgICAgPHYtbGlzdC1pdGVtLWNvbnRlbnQ+CiAgICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgICAgIDx2LWRpYWxvZyB0cmFuc2l0aW9uPSJkaWFsb2ctYm90dG9tLXRyYW5zaXRpb24iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uLCBhdHRycyB9Ij4KICAgICAgICAgICAgICAgIDx2LWJ0biBjb2xvcj0id2FybmluZyIgdi1iaW5kPSJhdHRycyIgdi1vbj0ib24iIHgtc21hbGw+CiAgICAgICAgICAgICAgICAgIOGAhuGAgOGAuuGAnuGAveGAmuGAuuGAm+GAlOGAuiDhgJbhgK/hgJThgLrhgLjhgJThgLbhgJXhgKvhgJDhgLoKICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpkZWZhdWx0PSJkaWFsb2ciPgogICAgICAgICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgICAgICAgPHYtdG9vbGJhciBjb2xvcj0id2FybmluZyIgZGFyayBzbWFsbD4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMXB4IgogICAgICAgICAgICAgICAgICAgICAgPuGAgOGAvOGAseGArOGAuuGAhOGAvOGArOGAlOGAtuGAleGAq+GAkOGAuiB7eyBwcm9wZXJ0eURldGFpbC5hZF9udW1iZXIgfX0g4YCh4YCQ4YC94YCA4YC6CiAgICAgICAgICAgICAgICAgICAgICDhgIbhgIDhgLrhgJ7hgL3hgJrhgLrhgJvhgJThgLog4YCW4YCv4YCU4YC64YC44YCU4YC24YCV4YCr4YCQ4YC6PC9zcGFuCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8L3YtdG9vbGJhcj4KICAgICAgICAgICAgICAgICAgPHYtY2FyZC10ZXh0PgogICAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJwYS0yIgogICAgICAgICAgICAgICAgICAgICAgdi1pZj0icHJvcGVydHlEZXRhaWwuY29udGFjdF9udW1iZXIgIT0gTlVMTCIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0icGggaW4gcHJvcGVydHlEZXRhaWwuY29udGFjdF9udW1iZXIuc3BsaXQoJywnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOmhyZWY9ImB0ZWw6JHtwaH1gIgogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IGJsYWNrOyB0ZXh0LWRlY29yYXRpb246IG5vbmUiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7IHBoIH19IDxiciAvPgogICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZWxzZT4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InBhLTIiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9InByb3BlcnR5RGV0YWlsLnVzZXJfaW5mb19pZCA9PSAwIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSJwaCBpbiB0YXRuYXl3b24ucGhvbmUuc3BsaXQoJywnKSIKICAgICAgICAgICAgICAgICAgICAgICAgICA6aHJlZj0iYHRlbDoke3BofWAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiBibGFjazsgdGV4dC1kZWNvcmF0aW9uOiBub25lIgogICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgcGggfX0gPGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGEtMiIgdi1lbHNlPgogICAgICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSJwaCBpbiBwcm9wZXJ0eURldGFpbC5waG9uZS5zcGxpdCgnLCcpIgogICAgICAgICAgICAgICAgICAgICAgICAgIDpocmVmPSJgdGVsOiR7cGh9YCIKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IGJsYWNrOyB0ZXh0LWRlY29yYXRpb246IG5vbmUiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBwaCB9fSA8YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgICAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8L3YtZGlhbG9nPgogICAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgICA8L3YtbGlzdC1pdGVtLWNvbnRlbnQ+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1kaXZpZGVyIGluc2V0Pjwvdi1kaXZpZGVyPgoKICAgICAgPHYtbGlzdC1pdGVtPgogICAgICAgIDx2LWxpc3QtaXRlbS1hY3Rpb24+CiAgICAgICAgICA8di1pY29uPm1kaS1tYXAtbWFya2VyPC92LWljb24+CiAgICAgICAgPC92LWxpc3QtaXRlbS1hY3Rpb24+CiAgICAgICAgPHYtbGlzdC1pdGVtLWNvbnRlbnQ+CiAgICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgICAgIDx2LWJ0biBjb2xvcj0icHJpbWFyeSIgeC1zbWFsbD4KICAgICAgICAgICAgICB7ewogICAgICAgICAgICAgICAgcHJvcGVydHlEZXRhaWwudXNlcl9pbmZvX2lkID09IDAKICAgICAgICAgICAgICAgICAgPyB0YXRuYXl3b24uYWRkcmVzcwogICAgICAgICAgICAgICAgICA6IHByb3BlcnR5RGV0YWlsLmFkZHJlc3MKICAgICAgICAgICAgICB9fQogICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgPC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgICA8L3YtbGlzdC1pdGVtLWNvbnRlbnQ+CiAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICA8di1kaXZpZGVyIGluc2V0Pjwvdi1kaXZpZGVyPgoKICAgICAgPHYtbGlzdC1pdGVtIHYtaWY9InByb3BlcnR5RGV0YWlsLnVzZXJfaW5mb19pZCAhPSAwIj4KICAgICAgICA8di1saXN0LWl0ZW0tYWN0aW9uPgogICAgICAgICAgPHYtaWNvbj5tZGktb2ZmaWNlLWJ1aWxkaW5nLWNvZzwvdi1pY29uPgogICAgICAgIDwvdi1saXN0LWl0ZW0tYWN0aW9uPgogICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50PgogICAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICBjb2xvcj0ic3VjY2VzcyIKICAgICAgICAgICAgICB4LXNtYWxsCiAgICAgICAgICAgICAgOnRvPSJ7CiAgICAgICAgICAgICAgICBuYW1lOiAnYWdlbnREZXRhaWwnLAogICAgICAgICAgICAgICAgcGFyYW1zOiB7IGlkOiBwcm9wZXJ0eURldGFpbC51c2VyX2lkIH0sCiAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIOGApOGAgOGAr+GAmeGAueGAleGAj+GAruGBjyBQYWdlIOGAgOGAreGAryDhgKHhgJ7hgLHhgLjhgIXhgK3hgJDhgLrhgIDhgLzhgIrhgLrhgLfhgJvhgJThgLoKICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgogICAgICA8L3YtbGlzdC1pdGVtPgogICAgPC92LWxpc3Q+CgogICAgPEFnZW50UmVxdWVzdElucXVpcnkgOnVzZXJJZD0icHJvcGVydHlEZXRhaWwudXNlcl9pbmZvX2lkIiAvPgoKICAgIDxkaXYgaWQ9ImNyZWF0ZSI+CiAgICAgIDx2LXNwZWVkLWRpYWwKICAgICAgICB2LW1vZGVsPSJmYWIiCiAgICAgICAgOnRvcD0idG9wIgogICAgICAgIDpib3R0b209ImJvdHRvbSIKICAgICAgICA6cmlnaHQ9InJpZ2h0IgogICAgICAgIDpsZWZ0PSJsZWZ0IgogICAgICAgIDpkaXJlY3Rpb249ImRpcmVjdGlvbiIKICAgICAgICA6b3Blbi1vbi1ob3Zlcj0iaG92ZXIiCiAgICAgICAgOnRyYW5zaXRpb249InRyYW5zaXRpb24iCiAgICAgID4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj4KICAgICAgICAgIDx2LWJ0biB2LW1vZGVsPSJmYWIiIGNvbG9yPSJibHVlIGRhcmtlbi0yIiBkYXJrIGZhYj4KICAgICAgICAgICAgPHYtaWNvbiB2LWlmPSJmYWIiPiBtZGktY2xvc2UgPC92LWljb24+CiAgICAgICAgICAgIDx2LWljb24gdi1lbHNlPiBtZGktYWNjb3VudC1jaXJjbGUgPC92LWljb24+CiAgICAgICAgICA8L3YtYnRuPgogICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgIDx2LWRpYWxvZyB0cmFuc2l0aW9uPSJkaWFsb2ctYm90dG9tLXRyYW5zaXRpb24iPgogICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I9Insgb24sIGF0dHJzIH0iPgogICAgICAgICAgICA8di1idG4gZmFiIGRhcmsgc21hbGwgY29sb3I9ImluZGlnbyIgdi1iaW5kPSJhdHRycyIgdi1vbj0ib24iPgogICAgICAgICAgICAgIDx2LWljb24+bWRpLXBob25lPC92LWljb24+CiAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICA8L3RlbXBsYXRlPgoKICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6ZGVmYXVsdD0iZGlhbG9nIj4KICAgICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgICA8di10b29sYmFyIGNvbG9yPSJ3YXJuaW5nIiBkYXJrIHNtYWxsPgogICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTogMTFweCIKICAgICAgICAgICAgICAgICAgPuGAgOGAvOGAseGArOGAuuGAhOGAvOGArOGAlOGAtuGAleGAq+GAkOGAuiB7eyBwcm9wZXJ0eURldGFpbC5hZF9udW1iZXIgfX0g4YCh4YCQ4YC94YCA4YC6CiAgICAgICAgICAgICAgICAgIOGAhuGAgOGAuuGAnuGAveGAmuGAuuGAm+GAlOGAuiDhgJbhgK/hgJThgLrhgLjhgJThgLbhgJXhgKvhgJDhgLo8L3NwYW4KICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L3YtdG9vbGJhcj4KICAgICAgICAgICAgICA8di1jYXJkLXRleHQ+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIGNsYXNzPSJwYS0yIgogICAgICAgICAgICAgICAgICB2LWlmPSJwcm9wZXJ0eURldGFpbC5jb250YWN0X251bWJlciAhPSBOVUxMIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgIHYtZm9yPSJwaCBpbiBwcm9wZXJ0eURldGFpbC5jb250YWN0X251bWJlci5zcGxpdCgnLCcpIgogICAgICAgICAgICAgICAgICAgIDpocmVmPSJgdGVsOiR7cGh9YCIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IGJsYWNrOyB0ZXh0LWRlY29yYXRpb246IG5vbmUiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICB7eyBwaCB9fSA8YnIgLz4KICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IHYtZWxzZT4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGEtMiIgdi1pZj0icHJvcGVydHlEZXRhaWwudXNlcl9pbmZvX2lkID09IDAiPgogICAgICAgICAgICAgICAgICAgIDxhCiAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0icGggaW4gdGF0bmF5d29uLnBob25lLnNwbGl0KCcsJykiCiAgICAgICAgICAgICAgICAgICAgICA6aHJlZj0iYHRlbDoke3BofWAiCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IGJsYWNrOyB0ZXh0LWRlY29yYXRpb246IG5vbmUiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAge3sgcGggfX0gPGJyIC8+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGEtMiIgdi1lbHNlPgogICAgICAgICAgICAgICAgICAgIDxhCiAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0icGggaW4gcHJvcGVydHlEZXRhaWwucGhvbmUuc3BsaXQoJywnKSIKICAgICAgICAgICAgICAgICAgICAgIDpocmVmPSJgdGVsOiR7cGh9YCIKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogYmxhY2s7IHRleHQtZGVjb3JhdGlvbjogbm9uZSIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICB7eyBwaCB9fSA8YnIgLz4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC92LWNhcmQtdGV4dD4KICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDwvdi1kaWFsb2c+CgogICAgICAgIDx2LWJ0bgogICAgICAgICAgZmFiCiAgICAgICAgICBkYXJrCiAgICAgICAgICBzbWFsbAogICAgICAgICAgY29sb3I9ImdyYXkiCiAgICAgICAgICBAY2xpY2s9InNoYXJlKHByb3BlcnR5RGV0YWlsLnNhbGVfaWQpIgogICAgICAgID4KICAgICAgICAgIDx2LWljb24+bWRpLXNoYXJlLXZhcmlhbnQ8L3YtaWNvbj4KICAgICAgICA8L3YtYnRuPgoKICAgICAgICA8di1idG4gZmFiIGRhcmsgc21hbGwgY29sb3I9InJlZCIgQGNsaWNrPSIkcm91dGVyLmdvKC0xKSI+CiAgICAgICAgICA8di1pY29uPm1kaS1hcnJvdy1sZWZ0LWNpcmNsZTwvdi1pY29uPgogICAgICAgIDwvdi1idG4+CiAgICAgIDwvdi1zcGVlZC1kaWFsPgogICAgPC9kaXY+CiAgPC92LWNhcmQ+CjwvZGl2Pgo="},null]}